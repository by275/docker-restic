name: buildx

on:
  watch:
    types: [started]
  push:
    branches:
      - 'master'
  pull_request:

env:
  TARGET_IMAGE: ghcr.io/by275/restic

jobs:
  build:
    runs-on: ubuntu-20.04
    if: github.event_name != 'pull_request' && (github.event_name != 'watch' || github.actor == github.event.repository.owner.login)
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Buildx
        uses: docker/setup-buildx-action@v1
      - 
        name: Initial Buildx
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          tags: ${{ env.TARGET_IMAGE }}:testing
          platforms: linux/amd64,linux/arm/v7,linux/arm64
      - 
        name: Load and Get Variables
        run: |
          docker buildx build \
            -t ${{ env.TARGET_IMAGE }}:testing \
            --platform=linux/amd64 \
            --load \
            .
          VER=$(docker run --rm ${{ env.TARGET_IMAGE }}:testing version | awk '{print $2}')
          echo "APP_VER=$VER" >> $GITHUB_ENV
      -
        name: Login to ghcr.io
        uses: docker/login-action@v1 
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_PAT }}
      - 
        name: Buildx and Push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          tags: |
            ${{ env.TARGET_IMAGE }}:latest
            ${{ env.TARGET_IMAGE }}:${{ env.APP_VER }}
          platforms: linux/amd64,linux/arm/v7,linux/arm64
          push: true
      -
        name: Notification
        uses: sarisia/actions-status-discord@v1
        if: always()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          status: ${{ job.status }}
          description: |
            ${{ env.TARGET_IMAGE }}:latest
            ${{ env.TARGET_IMAGE }}:${{ env.APP_VER }}
